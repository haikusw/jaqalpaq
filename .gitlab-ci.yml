image: python:3.7

variables:
  TEST_REPRODUCE: $TEST_REPRODUCE
  RELEASE: $RELEASE
  QSCOUT_BRANCH: $QSCOUT_BRANCH
  JAQALPAQ_EXTRAS_BRANCH: $JAQALPAQ_EXTRAS_BRANCH
  JAQALPAW_BRANCH: $JAQALPAW_BRANCH
  PYGSTI_COMMIT: $PYGSTI_COMMIT

before_script:
  - python --version
  - if [ "${PYGSTI_COMMIT}" != "NONE" ] ; then
        cd .. ;
        ls -l ;
        export LOCAL_PYGSTI="./pyGSTi" ;
        [ -d pyGSTi ] || git clone "https://github.com/pyGSTio/pyGSTi.git" ;
        cd pyGSTi ;
        git --version ;
        git ls-remote ;
        git reset --hard HEAD ;
        git fetch -p -t -f -v --all ;
        git ls-remote origin ;
        git status ;
        git checkout --detach "${PYGSTI_COMMIT}" ;
        git clean -x -f -d ;
        cd ../jaqalpaq ;
    fi
  - if echo "$CI_PROJECT_URL" | grep -q cee-gitlab.sandia.gov ; then
        repo="https://nexus.web.sandia.gov/repository/pypi-proxy/simple" &&
        pip config set global.index "$repo" &&
        pip config set global.index-url "$repo" &&
        echo -e '[easy_install]\nindex_url = '"${repo}" >~/.pydistutils.cfg ;
        unset https_proxy ;
    fi
  - pip install --upgrade pip wheel

stages:
  - Analysis and Tests
  - Reproducibility
  - Release

Unified Tests:
  stage: Analysis and Tests
  script:
    - git fetch origin master
    - if ! git diff --check origin/master HEAD ; then echo "See above whitespace errors." ; exit 1; fi
    - if find . -iname '*.py' -exec grep -l -P '\t' {} + ; then echo 'Above files have tabs.' ; exit 1 ; fi
    - devel/refresh-data-files setup.cfg.new
    - if ! diff -q setup.cfg.new setup.cfg ; then
        echo "Run devel/refresh-data-files to refresh examples list." ;
        exit 1 ;
      fi
    - pip install black~=22.1 && black --check .
    - cd ..
    - rm -fr qscout-gatemodels && git clone --depth 1 "$(echo "${CI_REPOSITORY_URL}" | sed 's/jaqalpaq.git/qscout-gatemodels.git/')" -b "${QSCOUT_BRANCH}"
    - LOCAL_JAQALPAQ=./jaqalpaq LOCAL_JAQALPAQ_EXTRAS="" LOCAL_QSCOUT_GATEMODELS=./qscout-gatemodels
      JAQALPAQ_OPTS="pygsti-integration,tests"
      ./jaqalpaq/install.sh
    - cd jaqalpaq
    - rm -f /tmp/ipc_test
    - pytest

Notebooks:
  stage: Reproducibility
  only:
    variables:
      - $TEST_REPRODUCE == "1"
  script:
    - git fetch origin master
    - cd ..
    - rm -fr qscout-gatemodels && git clone --depth 1 "$(echo "${CI_REPOSITORY_URL}" | sed 's/jaqalpaq.git/qscout-gatemodels.git/')" -b "${QSCOUT_BRANCH}"
    - rm -fr jaqalpaq-extras && git clone --depth 1 "$(echo "${CI_REPOSITORY_URL}" | sed 's/jaqalpaq.git/jaqalpaq-extras.git/')" -b "${JAQALPAQ_EXTRAS_BRANCH}"
    - pip install matplotlib==3.5.2
    - LOCAL_JAQALPAQ=./jaqalpaq LOCAL_JAQALPAQ_EXTRAS="" LOCAL_QSCOUT_GATEMODELS=./qscout-gatemodels
      JAQALPAQ_OPTS="pygsti-integration,notebooks"
      ./jaqalpaq/install.sh
    - pip install nbconvert ipykernel
    - ipython kernel install --name=python3 --user
    - cd jaqalpaq
    - find examples -name '*.ipynb' ! -name '*.nbconvert.ipynb' -exec devel/ipynb-execute {} --ExecutePreprocessor.kernel_name=python3 \;
    - find examples -name '*.nbconvert.ipynb' -print0 | xargs -0 tar -cf executed-notebooks.tar
    - find examples -name '*.ipynb' ! -name '*.nbconvert.ipynb' -print0 | (
        didfail=0 ;
        while IFS= read -r -d '' line ; do
          newf="${line%%.ipynb}.nbconvert.ipynb" ;
          if ! [ -f "$newf" ] ; then
            didfail=1 ;
            echo "${line} failed to build" ;
          elif ! devel/ipynb-diff "${line}" "${newf}" -q ; then
            didfail=1 ;
            echo "${line} changed" ;
          fi ;
        done ;
        exit "$didfail" ;
      )
  artifacts:
    when: always
    paths:
      - executed-notebooks.tar
    expire_in: 1 week

Packaging:
  stage: Release
  only:
    variables:
      - $RELEASE == "1"
  script:
    - git fetch origin master
    - cd ..
    - rm -fr qscout-gatemodels && git clone --depth 1 "$(echo "${CI_REPOSITORY_URL}" | sed 's/jaqalpaq.git/qscout-gatemodels.git/')" -b "${QSCOUT_BRANCH}"
    - rm -fr jaqalpaq-extras && git clone --depth 1 "$(echo "${CI_REPOSITORY_URL}" | sed 's/jaqalpaq.git/jaqalpaq-extras.git/')" -b "${JAQALPAQ_EXTRAS_BRANCH}"
    - rm -fr jaqalpaw && git clone --depth 1 "$(echo "${CI_REPOSITORY_URL}" | sed 's/jaqalpaq.git/jaqalpaw.git/')" -b "${JAQALPAW_BRANCH}"
    - rm -fr /tmp/build-jaqal
    - pip install build
    - jaqalpaq/devel/build
    - rm -f jaqalpaq/packages.tar
    - tar -cf jaqalpaq/packages.tar -C /tmp/build-jaqal dist
    - rm -fr /tmp/jaqal-test-venv
    - python3 -m venv /tmp/jaqal-test-venv
    - source /tmp/jaqal-test-venv/bin/activate
    - cd /tmp/build-jaqal/dist
    - pip install $(echo ./JaqalPaq-*.whl)'[pygsti-integration]' ./JaqalPaq_extras-*.whl $(echo ./JaqalPaw-*.whl)'[tests]' ./QSCOUT_gatemodels-*.whl
    - cd /tmp/jaqal-test-venv/share/jaqalpaq && pytest .
    - cd /tmp/jaqal-test-venv/share/jaqalpaw && pytest .
    - cd /tmp/jaqal-test-venv/share/qscout-gatemodels && pytest .
    - rm -fr /tmp/jaqal-test-venv
  artifacts:
    when: always
    paths:
      - packages.tar
    expire_in: 1 week
